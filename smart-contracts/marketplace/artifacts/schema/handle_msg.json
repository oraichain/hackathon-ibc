{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "withdraw_nft"
      ],
      "properties": {
        "withdraw_nft": {
          "type": "object",
          "required": [
            "offering_id"
          ],
          "properties": {
            "offering_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "buy_nft"
      ],
      "properties": {
        "buy_nft": {
          "type": "object",
          "required": [
            "offering_id"
          ],
          "properties": {
            "offering_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "receive_nft"
      ],
      "properties": {
        "receive_nft": {
          "$ref": "#/definitions/Cw721ReceiveMsg"
        }
      }
    },
    {
      "description": "Mint a new NFT, can only be called by the contract minter",
      "type": "object",
      "required": [
        "mint_nft"
      ],
      "properties": {
        "mint_nft": {
          "type": "object",
          "required": [
            "contract",
            "msg"
          ],
          "properties": {
            "contract": {
              "$ref": "#/definitions/HumanAddr"
            },
            "msg": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "set_pay_ment"
      ],
      "properties": {
        "set_pay_ment": {
          "type": "object",
          "required": [
            "denom",
            "ratio"
          ],
          "properties": {
            "denom": {
              "type": "string"
            },
            "ratio": {
              "$ref": "#/definitions/Decimal"
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Cw721ReceiveMsg": {
      "description": "Cw721ReceiveMsg should be de/serialized under `Receive()` variant in a HandleMsg",
      "type": "object",
      "required": [
        "sender",
        "token_id"
      ],
      "properties": {
        "msg": {
          "anyOf": [
            {
              "$ref": "#/definitions/Binary"
            },
            {
              "type": "null"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/HumanAddr"
        },
        "token_id": {
          "type": "string"
        }
      }
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "HumanAddr": {
      "type": "string"
    }
  }
}
